<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Settings.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        h0sp6MK/Q6cAAAAASUVORK5CYII=
</value>
  </data>
</root>